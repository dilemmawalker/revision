Classfile /F:/Pepcoding new revision/recursion/code.class
  Last modified Aug 26, 2020; size 1163 bytes
  MD5 checksum 71de9584bc150304696100632b94c7cd
  Compiled from "code.java"
public class code
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #16.#32        // java/lang/Object."<init>":()V
   #2 = Fieldref           #33.#34        // java/lang/System.out:Ljava/io/PrintStream;
   #3 = Class              #35            // java/lang/StringBuilder
   #4 = Methodref          #3.#32         // java/lang/StringBuilder."<init>":()V
   #5 = Methodref          #3.#36         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #6 = String             #37            //
   #7 = Methodref          #3.#38         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #8 = Methodref          #3.#39         // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #9 = Methodref          #40.#41        // java/io/PrintStream.print:(Ljava/lang/String;)V
  #10 = Methodref          #15.#42        // code.increasing:(II)V
  #11 = Methodref          #15.#43        // code.decreasing:(II)V
  #12 = Methodref          #15.#44        // code.evenodd:(II)V
  #13 = Methodref          #15.#45        // code.fact:(II)I
  #14 = Methodref          #40.#46        // java/io/PrintStream.print:(I)V
  #15 = Class              #47            // code
  #16 = Class              #48            // java/lang/Object
  #17 = Utf8               <init>
  #18 = Utf8               ()V
  #19 = Utf8               Code
  #20 = Utf8               LineNumberTable
  #21 = Utf8               increasing
  #22 = Utf8               (II)V
  #23 = Utf8               StackMapTable
  #24 = Utf8               decreasing
  #25 = Utf8               evenodd
  #26 = Utf8               fact
  #27 = Utf8               (II)I
  #28 = Utf8               main
  #29 = Utf8               ([Ljava/lang/String;)V
  #30 = Utf8               SourceFile
  #31 = Utf8               code.java
  #32 = NameAndType        #17:#18        // "<init>":()V
  #33 = Class              #49            // java/lang/System
  #34 = NameAndType        #50:#51        // out:Ljava/io/PrintStream;
  #35 = Utf8               java/lang/StringBuilder
  #36 = NameAndType        #52:#53        // append:(I)Ljava/lang/StringBuilder;
  #37 = Utf8
  #38 = NameAndType        #52:#54        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #39 = NameAndType        #55:#56        // toString:()Ljava/lang/String;
  #40 = Class              #57            // java/io/PrintStream
  #41 = NameAndType        #58:#59        // print:(Ljava/lang/String;)V
  #42 = NameAndType        #21:#22        // increasing:(II)V
  #43 = NameAndType        #24:#22        // decreasing:(II)V
  #44 = NameAndType        #25:#22        // evenodd:(II)V
  #45 = NameAndType        #26:#27        // fact:(II)I
  #46 = NameAndType        #58:#60        // print:(I)V
  #47 = Utf8               code
  #48 = Utf8               java/lang/Object
  #49 = Utf8               java/lang/System
  #50 = Utf8               out
  #51 = Utf8               Ljava/io/PrintStream;
  #52 = Utf8               append
  #53 = Utf8               (I)Ljava/lang/StringBuilder;
  #54 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #55 = Utf8               toString
  #56 = Utf8               ()Ljava/lang/String;
  #57 = Utf8               java/io/PrintStream
  #58 = Utf8               print
  #59 = Utf8               (Ljava/lang/String;)V
  #60 = Utf8               (I)V
{
  public code();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 4: 0

  public static void increasing(int, int);
    descriptor: (II)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: if_icmpne     6
         5: return
         6: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
         9: new           #3                  // class java/lang/StringBuilder
        12: dup
        13: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
        16: iload_0
        17: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        20: ldc           #6                  // String
        22: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        28: invokevirtual #9                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        31: iload_0
        32: iconst_1
        33: iadd
        34: iload_1
        35: invokestatic  #10                 // Method increasing:(II)V
        38: return
      LineNumberTable:
        line 6: 0
        line 7: 5
        line 9: 6
        line 10: 31
        line 11: 38
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  public static void decreasing(int, int);
    descriptor: (II)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: if_icmpne     6
         5: return
         6: iload_0
         7: iconst_1
         8: iadd
         9: iload_1
        10: invokestatic  #11                 // Method decreasing:(II)V
        13: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        16: new           #3                  // class java/lang/StringBuilder
        19: dup
        20: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
        23: iload_0
        24: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        27: ldc           #6                  // String
        29: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: invokevirtual #9                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        38: return
      LineNumberTable:
        line 13: 0
        line 14: 5
        line 16: 6
        line 17: 13
        line 18: 38
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  public static void evenodd(int, int);
    descriptor: (II)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: if_icmpne     6
         5: return
         6: iload_0
         7: iconst_2
         8: irem
         9: ifne          37
        12: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        15: new           #3                  // class java/lang/StringBuilder
        18: dup
        19: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
        22: iload_0
        23: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        26: ldc           #6                  // String
        28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        34: invokevirtual #9                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        37: iload_0
        38: iconst_1
        39: iadd
        40: iload_1
        41: invokestatic  #12                 // Method evenodd:(II)V
        44: iload_0
        45: iconst_2
        46: irem
        47: ifeq          75
        50: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        53: new           #3                  // class java/lang/StringBuilder
        56: dup
        57: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
        60: iload_0
        61: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        64: ldc           #6                  // String
        66: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        69: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        72: invokevirtual #9                  // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        75: return
      LineNumberTable:
        line 20: 0
        line 21: 5
        line 23: 6
        line 24: 12
        line 25: 37
        line 26: 44
        line 27: 50
        line 28: 75
      StackMapTable: number_of_entries = 3
        frame_type = 6 /* same */
        frame_type = 30 /* same */
        frame_type = 37 /* same */

  public static int fact(int, int);
    descriptor: (II)I
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=2
         0: iload_0
         1: iload_1
         2: if_icmpne     7
         5: iload_0
         6: ireturn
         7: iconst_1
         8: istore_2
         9: iload_0
        10: iconst_1
        11: iadd
        12: iload_1
        13: invokestatic  #13                 // Method fact:(II)I
        16: istore_2
        17: iload_2
        18: iload_0
        19: imul
        20: ireturn
      LineNumberTable:
        line 31: 0
        line 32: 5
        line 34: 7
        line 35: 9
        line 36: 17
      StackMapTable: number_of_entries = 1
        frame_type = 7 /* same */

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: iconst_1
         4: iconst_5
         5: invokestatic  #13                 // Method fact:(II)I
         8: invokevirtual #14                 // Method java/io/PrintStream.print:(I)V
        11: return
      LineNumberTable:
        line 39: 0
        line 40: 11
}
SourceFile: "code.java"
